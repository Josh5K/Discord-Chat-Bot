import User, { UserData } from './';
import { UserIdResolvable } from '../../Toolkit/UserTools';
import UserFollow from './UserFollow';
export interface UserNotificationFlags {
    email: boolean;
    push: boolean;
}
export interface PrivilegedUserData extends UserData {
    email: string;
    email_verified: boolean;
    notifications: UserNotificationFlags;
    partnered: boolean;
    twitter_connected: boolean;
}
export default class PrivilegedUser extends User {
    protected _data: PrivilegedUserData;
    followChannel(channel: UserIdResolvable, notifications?: boolean): Promise<UserFollow>;
    unfollowChannel(channel: UserIdResolvable): Promise<void>;
    blockUser(userToBlock: UserIdResolvable): Promise<UserFollow>;
    unblockUser(userToUnblock: UserIdResolvable): Promise<void>;
}
