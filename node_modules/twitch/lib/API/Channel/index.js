"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const ChannelPlaceholder_1 = require("./ChannelPlaceholder");
class Channel extends ChannelPlaceholder_1.default {
    constructor(data, client) {
        super(data._id, client);
        this._data = data;
    }
    // override parent's method so we avoid the API/cache request here if someone wrongly assumes this is a placeholder
    getChannel() {
        return __awaiter(this, void 0, void 0, function* () {
            return this;
        });
    }
    update(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._client.channels.updateChannel(this, data);
        });
    }
    get name() {
        return this._data.name;
    }
    get displayName() {
        return this._data.display_name;
    }
}
exports.default = Channel;
//# sourceMappingURL=index.js.map