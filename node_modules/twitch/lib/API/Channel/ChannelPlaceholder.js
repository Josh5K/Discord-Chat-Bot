"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Decorators_1 = require("../../Toolkit/Decorators");
const NoSubscriptionProgram_1 = require("../NoSubscriptionProgram");
const NotSubscribed_1 = require("../NotSubscribed");
class ChannelPlaceholder {
    constructor(id, client) {
        this._data = { _id: id };
        this._client = client;
    }
    get cacheKey() {
        return this._data._id;
    }
    get id() {
        return this._data._id;
    }
    getCheermotes() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._client.bits.getCheermotes(this);
        });
    }
    getChannel() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._client.channels.getChannel(this);
        });
    }
    getStream() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._client.streams.getStreamByChannel(this);
        });
    }
    getFollowers() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._client.channels.getChannelFollowers(this);
        });
    }
    getSubscriptions() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._client.channels.getChannelSubscriptions(this);
        });
    }
    getSubscriptionBy(user) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._client.channels.getChannelSubscriptionByUser(this, user);
        });
    }
    hasSubscriber(user) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.getSubscriptionBy(user);
                return true;
            }
            catch (e) {
                if (e instanceof NoSubscriptionProgram_1.default || e instanceof NotSubscribed_1.default) {
                    return false;
                }
                throw e;
            }
        });
    }
}
__decorate([
    Decorators_1.NonEnumerable
], ChannelPlaceholder.prototype, "_client", void 0);
exports.default = ChannelPlaceholder;
//# sourceMappingURL=ChannelPlaceholder.js.map