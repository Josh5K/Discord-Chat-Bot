import Twitch from '../../';
export declare enum CheermoteBackground {
    dark = "dark",
    light = "light",
}
export declare enum CheermoteState {
    animated = "animated",
    'static' = "static",
}
export declare enum CheermoteScale {
    x1 = "1",
    x1_5 = "1.5",
    x2 = "2",
    x3 = "3",
    x4 = "4",
}
export declare type CheermoteActionImageUrlsByScale = {
    [scale in CheermoteScale]: string;
};
export declare type CheermoteActionImageUrlsByStateAndScale = {
    [state in CheermoteState]: CheermoteActionImageUrlsByScale;
};
export declare type CheermoteActionImageUrlsByBackgroundAndStateAndScale = {
    [background in CheermoteBackground]: CheermoteActionImageUrlsByStateAndScale;
};
export interface CheermoteActionTierData {
    min_bits: number;
    id: string;
    color: string;
    images: CheermoteActionImageUrlsByBackgroundAndStateAndScale[];
}
export interface CheermoteActionData {
    prefix: string;
    scales: string[];
    tiers: CheermoteActionTierData[];
    backgrounds: string[];
    states: string[];
    type: string;
    updated_at: string;
    priority: number;
}
export interface CheermoteListData {
    actions: CheermoteActionData[];
}
export interface CheermoteOptions {
    background: CheermoteBackground;
    state: CheermoteState;
    scale: CheermoteScale;
}
export interface CheermoteDisplayInfo {
    url: string;
    color: string;
}
export default class CheermoteList {
    private _client;
    private _data;
    constructor(data: CheermoteActionData[], client: Twitch);
    getCheermoteDisplayInfo(name: string, bits: number, options?: Partial<CheermoteOptions>): CheermoteDisplayInfo;
}
