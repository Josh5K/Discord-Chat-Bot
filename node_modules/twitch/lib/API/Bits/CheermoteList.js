"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Decorators_1 = require("../../Toolkit/Decorators");
const ObjectTools_1 = require("../../Toolkit/ObjectTools");
const defaults = require("defaults");
var CheermoteBackground;
(function (CheermoteBackground) {
    CheermoteBackground["dark"] = "dark";
    CheermoteBackground["light"] = "light";
})(CheermoteBackground = exports.CheermoteBackground || (exports.CheermoteBackground = {}));
var CheermoteState;
(function (CheermoteState) {
    CheermoteState["animated"] = "animated";
    CheermoteState["static"] = "static";
})(CheermoteState = exports.CheermoteState || (exports.CheermoteState = {}));
var CheermoteScale;
(function (CheermoteScale) {
    CheermoteScale["x1"] = "1";
    CheermoteScale["x1_5"] = "1.5";
    CheermoteScale["x2"] = "2";
    CheermoteScale["x3"] = "3";
    CheermoteScale["x4"] = "4";
})(CheermoteScale = exports.CheermoteScale || (exports.CheermoteScale = {}));
class CheermoteList {
    constructor(data, client) {
        this._client = client;
        this._data = ObjectTools_1.default.indexBy(data, action => action.prefix.toLowerCase());
    }
    getCheermoteDisplayInfo(name, bits, options) {
        name = name.toLowerCase();
        const cheermoteDefaults = this._client._config.cheermotes;
        const fullOptions = defaults(options || {}, {
            background: cheermoteDefaults.defaultBackground,
            state: cheermoteDefaults.defaultState,
            scale: cheermoteDefaults.defaultScale
        });
        const tiers = this._data[name].tiers;
        const correctTier = tiers.sort((a, b) => b.min_bits - a.min_bits).find(tier => tier.min_bits <= bits);
        if (!correctTier) {
            throw new Error(`Cheermote "${name}" does not have an applicable tier for ${bits} bits`);
        }
        return {
            url: correctTier.images[fullOptions.background][fullOptions.state][fullOptions.scale],
            color: correctTier.color
        };
    }
}
__decorate([
    Decorators_1.NonEnumerable
], CheermoteList.prototype, "_client", void 0);
exports.default = CheermoteList;
//# sourceMappingURL=CheermoteList.js.map